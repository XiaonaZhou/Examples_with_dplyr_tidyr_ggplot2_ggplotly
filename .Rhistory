install.packages("nycflights13")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(nycflights13)
library(dplyr)
library(nycflights13)
summary(flights)
library(dplyr)
library(nycflights13)
fl<- flights %>%
filter(month == 11, day == 3, carrier = 'AA')
fl <- flights %>%
filter(month == 11, day == 3, carrier == 'AA')
head(fl)
fl <- flights %>%
slice(1:10)
head(fl)
slice_fl <- flights %>%
slice(1:10)
head(slice_fl)
slice_fl <- flights %>%
slice(1:8)
head(slice_fl)
slice_fl <- flights %>%
slice(1:3)
head(slice_fl)
slice_fl <- flights %>%
slice(1:3)
head(slice_fl)
nrow(flights)
slice_fl <- flights %>% slice(1:10)
head(slice_fl)
nrow(flights)
flights %>% slice(1:10)
arr <- flights %>% arrange(year, month,day, arr_time)
head(arr)
arr <- flights %>% arrange(year, month,day,desc(arr_time)
head(arr)
arr <- flights %>% arrange(year, month,day,desc(arr_time))
head(arr)
arr <- flights %>% arrange(year, month,day,desc(arr_time))
head(arr)
sele <- flights %>% select(carrier, month,day, arr_time)
head(sele)
rename_fl <- flights %>% rename(airline_carrier = carrier)
head(rename_fl)
rename_fl <- flights %>% rename(airline_carrier = carrier) %>%
select(airline_carrier)
head(rename_fl)
flights %>% distinct(select(carrier))
flights %>% distinct(select(flights,carrier))
flights %>% distinct(select(carrier))
distinct(select(flight, carrier))
distinct(select(flights, carrier))
distinct(select(flights, carrier))
# or
flights %>% distinct(select(flights$carrier))
distinct(select(flights, carrier))
# or
distinct(select(flights$carrier))
distinct(select(flights, carrier))
# or
flights %>% distinct(carrier)
mutate_fl <- flights %>% mutate(overall_delay = arr_delay - dep_delay) %>% select(overall_delay)
mutate_fl <- flights %>% mutate(overall_delay = arr_delay - dep_delay) %>% select(overall_delay)
head(mutate_fl)
mutate_fl <- flights %>% mutate(overall_delay = arr_delay - dep_delay) %>% select(overall_delay)
head(mutate_fl)
transmute_fl <- flights%>% transmute(overall_delay = arr_delay - dep_delay)
head(transmute_fl)
mutate_fl <- flights %>% mutate(overall_delay = arr_delay - dep_delay) %>% select(overall_delay)
head(mutate_fl)
transmute_fl <- flights%>% transmute(overall_delay = arr_delay - dep_delay)
head(transmute_fl)
flights %>% summarise(avg_air_time = mean(air_time, na.rm = TRUE))
# avg_air_time contains the average air_time with NA rows removed (that's what 'na.rm = TRUE' do)
flights %>% summarise(avg_air_time = mean(air_time, na.rm = TRUE))
# avg_air_time contains the average air_time with NA rows removed (that's what 'na.rm = TRUE' do)
flights %>% summarise(total_air_time = sum(air_time, na.rm = TRUE))
flights %>% summarise(avg_air_time = mean(air_time, na.rm = TRUE))
# avg_air_time contains the average air_time with NA rows removed (that's what 'na.rm = TRUE' do)
#Another Example
flights %>% summarise(total_air_time = sum(air_time, na.rm = TRUE))
sample_n(flights, 10)
sample_n(flights, 10) # randomly select 10 rows from the data frame
sample_frac(flight,0.1) #randomly select 10% of the rows from data frame
sample_n(flights, 10) # randomly select 10 rows from the data frame
sample_frac(flights,0.1) #randomly select 10% of the rows from data frame
mtcars %>%
filter(mpg >20, cyl == 6)
mtcars %>%
filter(mpg > 20, cyl == 6)
mtcars %>% arrange(cyl, desc(wt))
arr_1 <- mtcars %>% arrange(cyl, desc(wt))
head(arr_1)
mtcars %>% select(mpg,hp)
mtcars %>% distinct(gear)
mutate_car <- mtcars %>% mutate(Performance = hp/wt)
mutate_car <- mtcars %>% mutate(Performance = hp/wt)
head(mutate_car)
mtcars %>% summarise(avg_mpg = mean(mpg))
mtcars %>% summarise(avg_mpg = mean(mpg)) #the mean mpg
mtcars %>% filter(cyl == 6) %>%
summarise(std_hp = mean(hp))
mtcars %>% summarise(avg_mpg = mean(mpg)) #the mean mpg
mtcars %>% filter(cyl == 6) %>%
summarise(std_hp = sd(hp))
mtcars %>% summarise(avg_mpg = mean(mpg)) #the mean mpg
mtcars %>% filter(cyl == 6) %>%
summarise(std_hp = sd(hp))  #the mean hp value for cars with 6 cylinders.
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyr)
library(data.table)
library(tidyr)
library(data.table)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df <- data.frame(comp=comp,year=yr,Qtr1 = q1,Qtr2 = q2,Qtr3 = q3,Qtr4 = q4)
df %>%
gather(Quarter, Revenue, Qtr1:Qtr4)# stacking all the values
library(tidyr)
library(data.table)
comp <- c(1,1,1,2,2,2,3,3,3)
yr <- c(1998,1999,2000,1998,1999,2000,1998,1999,2000)
q1 <- runif(9, min=0, max=100)
q2 <- runif(9, min=0, max=100)
q3 <- runif(9, min=0, max=100)
q4 <- runif(9, min=0, max=100)
df <- data.frame(comp=comp,year=yr,Qtr1 = q1,Qtr2 = q2,Qtr3 = q3,Qtr4 = q4)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks %>%
gather(stock, price, x:z)# stacking all the values
stocks %>%
gather(stock, price, X:Z)# stacking all the values
stock_gathered <- stocks %>%
gather(stock, price, X:Z)
stock_gathered %>% spread(stock,price)
stock_gathered <- stocks %>%
gather(stock, price, X:Z)
stock_gathered %>% spread(stock,price)# undo gather
# Anather Example of Spread
stock_gathered %>% spread(time, price)
df <- data.frame(x = c(NA, "a.x", "b.y", "c.z"))
df
df <- data.frame(x = c(NA, "a.x", "b.y", "c.z"))
df
df %>% separate(x, c("ABC", "XYZ"))
df1 <- data.frame(x = c(NA, "a-x", "b-y", "c-z"))
df1
#separate(data = x, cc("abc", "xyz"))
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1
separate(data = df1, col=new_col, into = cc("abc", "xyz"), sep = '-')
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1
separate(data = df1, col=new_col, into = c("abc", "xyz"), sep = '-')
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1
separate(data = df1, col=new_col, into = c("abc", "xyz"), sep = '-')
# or
separate(data = df1, col=new_col, into = c("abc", "xyz"))
#or
df1 %>% separate(new_col, c("abc", "xyz"))
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1_sep <- separate(data = df1, col=new_col, into = c("abc", "xyz"), sep = '-')
df1_sep %>%
unite(new_joined, abc,xyz)
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1_sep <- separate(data = df1, col=new_col, into = c("abc", "xyz"), sep = '-')
df1_sep %>%
unite(new_joined, abc,xyz, sep ='.' )
df1 <- data.frame(new_col = c(NA, "a-x", "b-y", "c-z"))
df1_sep <- separate(data = df1, col=new_col, into = c("abc", "xyz"), sep = '-')
df1_sep %>%
unite(new_joined, abc,xyz, sep = '---' )
batting <- read.csv('Batting.csv')
head(batting)
str(batting)
head(batting$AB)
head(batting$X2B)
batting$BA <- batting$H / batting$AB
tail(batting$BA,5)
batting$OBP <- (batting$H+batting$BB+batting$HBP) / (batting$AB+batting$BB+batting$HBP+batting$sf)
batting$OBP <- (batting$H + batting$BB + batting$HBP)/(batting$AB + batting$BB + batting$HBP + batting$SF)
HEAD(batting$OBP)
head(batting$OBP)
batting$1B <- (batting$H - batting$X2B -batting$X3B -batting$HR)
batting$x1B <- (batting$H - batting$X2B -batting$X3B -batting$HR)
batting$SLG <- (batting$x1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR)/batting$AB
str(batting)
salaries <- read.csv('Salaries.csv')
?subset()
batting_af_1985 <- subset(batting, batting$yearID>1985)
head(batting_af_1985)
min(batting_af_1985$yearID)
batting_af_1985 <- subset(batting, batting$yearID>=1985)
batting_af_1985 <- subset(batting, batting$yearID>=1985)
min(batting_af_1985$yearID)
summary(batting_af_1985)
?merge
merge(batting_af_1985,salaries, by = c('playerID','yearID'))
bat_sal <- merge(batting_af_1985,salaries, by = c('playerID','yearID'))
summary(bat_sal)
?%in%
? %in%
lost_players <- subset(bat_sal, bat_sal$playerID %in% c('giambja01','damonjo01','saenzol01'))
lost_players
bat_sal_2001 <- subset(bat_sal, yearID==2001)
head(bat_sal_2001)
reduced_lost_player <- lost_players %>%
select(playerID, H, X2B,X3B, HR, OBP, SLG, BA, AB)
library(dyplr)
library(Dyplr)
library(dplyr)
reduced_lost_player <- lost_players %>%
select(playerID, H, X2B,X3B, HR, OBP, SLG, BA, AB)
reduced_lost_player
reduced_lost_player <- bat_sal_2001 %>%
select(playerID, H, X2B,X3B, HR, OBP, SLG, BA, AB)
reduced_lost_player
lost_player_2001 <- subset(lost_players, yearID == 2001)
reduced_lost_player <- lost_player_2001 %>%
select(playerID, H, X2B,X3B, HR, OBP, SLG, BA, AB)
reduced_lost_player
bat_sal_2001 <- subset(bat_sal, yearID==2001)
bat_sal_2001 %>%
arrange(AB, OBP)
arranged <- bat_sal_2001 %>%
arrange(AB, OBP)
head(arranged)
arranged <- bat_sal_2001 %>%
arrange(desc(AB), desc(OBP))
head(arranged)
lost_player_2001
target_AB <- sum(lost_player_2001$AB)
target_AB
AB <- sum(arranged$BA[1:3])
AB
AB <- sum(arranged$AB[1:3])
AB
target_OBP <- sum(lost_player_2001$OBP)
OBP <-  sum(arranged$OBP[1:3])
target_OBP
OBP
target_AB <- sum(lost_player_2001$AB)
AB <- sum(arranged$AB[2:4])
target_OBP <- sum(lost_player_2001$OBP)
OBP <-  sum(arranged$OBP[2:4])
if (AB > target_AB & OBP >target_OBP){
return(TRUE)
}
AB <- sum(arranged$AB[2:4])
OBP <-  sum(arranged$OBP[2:4])
OBP
AB
arranged <- bat_sal_2001 %>%
arrange(desc(OBP),desc(AB))
head(arranged)
target_AB <- sum(lost_player_2001$AB)
AB <- sum(arranged$AB[1:3])
target_OBP <- sum(lost_player_2001$OBP)
OBP <-  sum(arranged$OBP[1:3])
if (AB > target_AB & OBP > target_OBP){
return(TRUE)
}
AB
avail.players <- filter(avail.players,salary<8000000,OBP>0, yearID==2001)
avail.players <- filter(bat_sal,salary<8000000,OBP>0, yearID==2001)
avail.players <- filter(bat_sal,salary<8000000,OBP>0, yearID == 2001, AB>500)
avail.players <- bat_sal %>%
filter(salary<8000000,OBP>0, yearID == 2001, AB>500) %>%
arrange(desc(OBP))
possible.players <- bat_sal %>%
filter(salary<8000000,OBP>0, yearID == 2001, AB>500) %>%
arrange(desc(OBP))
possible.players
possible.players <- bat_sal %>%
filter(salary<8000000,OBP>0, yearID == 2001, AB>500) %>%
arrange(desc(OBP)) %>%
select(playerID, OBP, AB, salary)
possible.players
target_AB <- sum(lost_player_2001$AB)
sum(lost_player_2001$AB)
sum(lost_player_2001$OBP)
sum(possible.players$AB[2:4])
sum(possible.players$OBP[2:4])
knitr::opts_chunk$set(echo = TRUE)
batting <-  read.csv('Batting.csv')
salary <- read.csv('Salaries.csv')
min(batting$yearID)
min(salary$yearID)
sal_2001 <- salary %>%
filter(yearID ==2001)
bat_2001 <- batting %>%
filter(yearID ==2001)
summry(batting)
summary(batting)
bat_sal <- merge(bat_2001,sal_2001, by = c(playerID, yearID ))
bat_sal <- merge(bat_2001,sal_2001, by = c('playerID', 'yearID' ))
head(bat_sal)
lost_players <- subset(bat_sal,playerID %in% c('giambja01','damonjo01','saenzol01') )
lost_players
possible.repl <- bat_sal %>% filter(!(playerIDplayerID %in% c('giambja01','damonjo01','saenzol01'))
possible.repl <- bat_sal %>% filter(!(playerIDplayerID %in% c('giambja01','damonjo01','saenzol01')))
possible.repl <- bat_sal %>% filter(!(playerIDplayerID %in% c('giambja01','damonjo01','saenzol01')))
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01')))
possible.repl
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01'))) %>%
arrange(desc(AB), desc(OBP))
batting <-  read.csv('Batting.csv')
# calculate OBP, HBP, X1B, SLG
batting$OBP <- (batting$H + batting$BB + batting$HBP)/(batting$AB + batting$BB + batting$HBP + batting$SF)
batting$x1B <- (batting$H - batting$X2B - batting$X3B - batting$HR)
batting$SLG <- (batting$x1B + 2*batting$X2B + 3*batting$X3B + 4*batting$HR)/batting$AB
salary <- read.csv('Salaries.csv')
bat_2001 <- batting %>%
filter(yearID ==2001)
sal_2001 <- salary %>%
filter(yearID ==2001)
bat_sal <- merge(bat_2001,sal_2001, by = c('playerID', 'yearID' ))
# lost players' info
lost_players <- subset(bat_sal,playerID %in% c('giambja01','damonjo01','saenzol01') )
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01'))) %>%
arrange(desc(AB), desc(OBP))
possible.repl
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01'))) %>%
select(playerID, AB, OBP,salary) %>%
arrange(desc(AB), desc(OBP))
possible.repl
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01'))) %>%
select(playerID, AB > 500, OBP,salary) %>%
arrange(desc(OBP))
possible.repl <- bat_sal %>% filter(!(playerID %in% c('giambja01','damonjo01','saenzol01')), AB > 500) %>%
select(playerID, AB, OBP,salary) %>%
arrange(desc(OBP))
possible.repl
sum(possible.repl$AB[1:3])
sum(possible.repl$OBP[1:3])
sum(possible.repl$AB[1:3]) > sum(lost_players$AB[1:3]) #1741
sum(possible.repl$OBP[1:3]) > sum(lost_players$OBP[1:3])# 1.299299
possible.repl[1:3]
possible.repl$playerID[1:3]
install.packages(c("dplyr", "ggplot2", "ggplot2movies", "ggthemes", "hexbin", "knitr", "plotly"))
install.packages(c("data.table", "knitr", "tidyr"))
install.packages(c("data.table", "knitr", "tidyr"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df1 <- tibble(x1 = c('A','B','C','E','A'),
x2 = c(1,2,3,4,5))
df2 <- tibble(x1 = c('A','B','D'),
x3 = c(T,F,T))
df1 <- tibble(x1 = c('A','B','C','E','A'),
x2 = c(1,2,3,4,5))
df2 <- tibble(x1 = c('A','B','D'),
x3 = c(T,F,T))
df1
?tibble
df1 <- tibble(x1 = c('A','B','C','E','A'),
x2 = c(1,2,3,4,5))
df2 <- tibble(x1 = c('A','B','D'),
x3 = c(T,F,T))
df1
df2
inner_join(df1,df2)
left_join(df1,df2)
left_join(df2, df1)
full_join(df1, df2)
anti_join(df1,df2)
nrow(anti_join(df1,df2))==0
states
states <- tibble(name = rep(state.name[1:3], times = 2),
dimension = rep(c('Area','Population'), each = 3),
stat = c(state.x77[1:3, "Area"], state.x77[1:3, "Population"] * 1e3))
states <- slice(states, 1:5)
states
states_wide <- states %>%
spread(dimension,stat)
states_wide
?gsub
state_pop_by_year <- states_wide %>%
mutate(year_1977 = Population,
year_1978 = 1.05 * year_1977,
year_1979 = 1.05 * year_1978) %>%
select(name, year_1977, year_1978, year_1979)
names(state_pop_by_year) <- gsub('year_', '', names(state_pop_by_year))
state_pop_by_year
gather(state_pop_by_year, key = "year", "population", value = 1997, 1998, 1999)
gather(state_pop_by_year, key = c("year", "population"), value = c(1997, 1998, 1999))
gather(state_pop_by_year, key = c("year", "population"), value = c(1997, 1998, 1999))
gather(state_pop_by_year, "year", "population", '1997', '1998', '1999')
gather(state_pop_by_year, "year", "population", '1977', '1978', '1979')
gather(state_pop_by_year, "year", "population", '1977', '1978', '1979')
# Method 3
gather(state_pop_by_year, "year", "population", -name)
# Method 1
gather(state_pop_by_year, "year", "population", '1977', '1978', '1979')
# Method 2
gather(state_pop_by_year, "year", "population", matches('^197?'))# '^197?' : starting with 197
# Method 3
gather(state_pop_by_year, "year", "population", -name) # -name, exculde column name, include all others
# Method 4
gather(state_pop_by_year, matches('^197?'), key = "year", value="population")
